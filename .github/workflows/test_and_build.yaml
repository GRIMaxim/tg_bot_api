name: Lint&Test&Deploy
on:
  push:
    branches:
      - 'master'
      - 'dev'
jobs:
  run_tests_and_linters:
    name: Run tests and linters
    runs-on: [ubuntu-latest]
    environment: dev_env
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.6.1'
      - name: Install dependencies
        run: poetry install
      - name: Run ruff
        run: poetry run ruff . --fix
      - name: Run mypy
        run: poetry run mypy ./src
      - name: Run deptry
        run: poetry run deptry .
      - name: Run tests
        run: poetry run pytest
        env:
          F_TEST: ${{ secrets.F_TEST }}
          PG_DRIVERNAME: ${{ secrets.PG_DRIVERNAME }}
          PG_HOST: ${{ secrets.IP_SERVER }}
          PG_PASS: ${{ secrets.PG_PASS }}
          PG_PORT: ${{ secrets.PG_PORT }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
  build_and_pub:
    name: Build docker image and publish
    needs: [run_tests_and_linters]
    runs-on: [ubuntu-latest]
    environment: deploy_env
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
      F_TEST: ${{ secrets.F_TEST }}
      PG_DRIVERNAME: ${{ secrets.PG_DRIVERNAME }}
      PG_HOST: ${{ secrets.IP_SERVER }}
      PG_PASS: ${{ secrets.PG_PASS }}
      PG_PORT: ${{ secrets.PG_PORT }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_DATABASE: ${{ secrets.PG_DATABASE }}
    steps:
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}
  deploy:
    name: Deploy to server
    needs: [build_and_pub]
    runs-on: [ubuntu-latest]
    environment: deploy_env
    env:
      TAG: ${GITHUB_REF:11}
    steps:
      - name: Connect to server and run deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_SERVER }}
          port: ${{ secrets.PORT_SERVER }}
          username: ${{ secrets.USER_SERVER }}
          password: ${{ secrets.PASSWORD_SERVER }}
          script_stop: true
          script: bash deploy.sh ${{ secrets.DOCKER_LOGIN }} ${{ secrets.DOCKER_PWD }} ${{ secrets.DOCKER_NAME }} ${{ env.TAG }}
        
