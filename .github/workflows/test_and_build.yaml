name: Test&Lint
on:
  push:
    branches:
      - 'master'
      - 'dev'
jobs:
  run_tests_and_linters:
    name: Run tests and linters
    runs-on: [ubuntu-latest]
    environment: dev_env
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.6.1'
      - name: Install dependencies
        run: poetry install
      - name: Run ruff
        run: poetry run ruff .
      - name: Run mypy
        run: poetry run mypy .
      - name: Run deptry
        run: poetry run deptry .
      - name: Run tests
        run: poetry run pytest
        env:
          F_TEST: ${{ secrets.F_TEST }}
          PG_DRIVERNAME: ${{ secrets.PG_DRIVERNAME }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_PASS: ${{ secrets.PG_PASS }}
          PG_PORT: ${{ secrets.PG_PORT }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
  # build_and_pub:
  #   needs: [run_tests_and_linters]
  #   runs-on: [ubuntu-latest]
  #   env:
  #     LOGIN: ${{ secrets.DOCKER_LOGIN }}
  #     NAME: ${{ secrets.DOCKER_NAME }}
  #   steps:
  #     - name: Login to docker.io
  #       run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
  #     - uses: actions/checkout@master
  #     - name: Build image
  #       run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
  #     - name: Push image to docker.io
  #       run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

  # deploy:
  #   needs: [build_and_pub]
  #   runs-on: [ubuntu-latest]
  #   steps:
  #     - name: Set tag to env
  #       run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
  #     - name: Send webhook for deploy
  #       run: "curl --silent --show-error --fail -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_NAME }}\", \"tag\": \"${{ env.RELEASE_VERSION }}\", \"ports\": {\"8080\": 8080}}'"
